mysql> SET SESSION optimizer_trace = 1;
Query OK, 0 rows affected (0.0003 sec)

mysql> EXPLAIN
       SELECT ci.ID, ci.Name, ci.District,
              co.Name AS Country, ci.Population
         FROM city ci
              INNER JOIN
                (SELECT Code, Name
                   FROM country
                  WHERE continent = 'Europe'
                  ORDER BY SurfaceArea
                  LIMIT 10
                ) co ON co.Code = ci.CountryCode
        ORDER BY ci.Population DESC
        LIMIT 5;
+----+-------------+------------+------------+------+---------------+-------------+---------+---------+------+--------------------+---------------------------------+
| id | select_type | table      | partitions | type | possible_keys | key         | key_len | ref     | rows | filtered           | Extra                           |
+----+-------------+------------+------------+------+---------------+-------------+---------+---------+------+--------------------+---------------------------------+
|  1 | PRIMARY     | <derived2> | NULL       | ALL  | NULL          | NULL        | NULL    | NULL    |   10 |                100 | Using temporary; Using filesort |
|  1 | PRIMARY     | ci         | NULL       | ref  | CountryCode   | CountryCode | 3       | co.Code |   18 |                100 | NULL                            |
|  2 | DERIVED     | country    | NULL       | ALL  | NULL          | NULL        | NULL    | NULL    |  239 | 14.285715103149414 | Using where; Using filesort     |
+----+-------------+------------+------------+------+---------------+-------------+---------+---------+------+--------------------+---------------------------------+
3 rows in set, 1 warning (0.0350 sec)
Note (code 1003): /* select#1 */ select `world`.`ci`.`ID` AS `ID`,`world`.`ci`.`Name` AS `Name`,`world`.`ci`.`District` AS `District`,`co`.`Name` AS `Country`,`world`.`ci`.`Population` AS `Population` from `world`.`city` `ci` join (/* select#2 */ select `world`.`country`.`Code` AS `Code`,`world`.`country`.`Name` AS `Name` from `world`.`country` where (`world`.`country`.`Continent` = 'Europe') order by `world`.`country`.`SurfaceArea` limit 10) `co` where (`world`.`ci`.`CountryCode` = `co`.`Code`) order by `world`.`ci`.`Population` desc limit 5

mysql> SET SESSION optimizer_trace = 0;
Query OK, 0 rows affected (0.0002 sec)

mysql> SELECT * FROM information_schema.OPTIMIZER_TRACE\G
*************************** 1. row ***************************
                            QUERY: EXPLAIN
SELECT ci.ID, ci.Name, ci.District,
       co.Name AS Country, ci.Population
  FROM city ci
       INNER JOIN
         (SELECT Code, Name
            FROM country
           WHERE continent = 'Europe'
           ORDER BY SurfaceArea
           LIMIT 10
         ) co ON co.Code = ci.CountryCode
 ORDER BY ci.Population DESC
 LIMIT 5
                            TRACE: {
  "steps": [
    {
      "join_preparation": {
        "select#": 1,
        "steps": [
          {
            "join_preparation": {
              "select#": 2,
              "steps": [
                {
                  "expanded_query": "/* select#2 */ select `country`.`Code` AS `Code`,`country`.`Name` AS `Name` from `country` where (`country`.`Continent` = 'Europe') order by `country`.`SurfaceArea` limit 10"
                }
              ]
            }
          },
          {
            "derived": {
              "table": " `co`",
              "select#": 2,
              "materialized": true
            }
          },
          {
            "expanded_query": "/* select#1 */ select `ci`.`ID` AS `ID`,`ci`.`Name` AS `Name`,`ci`.`District` AS `District`,`co`.`Name` AS `Country`,`ci`.`Population` AS `Population` from (`city` `ci` join (/* select#2 */ select `country`.`Code` AS `Code`,`country`.`Name` AS `Name` from `country` where (`country`.`Continent` = 'Europe') order by `country`.`SurfaceArea` limit 10) `co` on((`co`.`Code` = `ci`.`CountryCode`))) order by `ci`.`Population` desc limit 5"
          },
          {
            "transformations_to_nested_joins": {
              "transformations": [
                "JOIN_condition_to_WHERE",
                "parenthesis_removal"
              ],
              "expanded_query": "/* select#1 */ select `ci`.`ID` AS `ID`,`ci`.`Name` AS `Name`,`ci`.`District` AS `District`,`co`.`Name` AS `Country`,`ci`.`Population` AS `Population` from `city` `ci` join (/* select#2 */ select `country`.`Code` AS `Code`,`country`.`Name` AS `Name` from `country` where (`country`.`Continent` = 'Europe') order by `country`.`SurfaceArea` limit 10) `co` where (`co`.`Code` = `ci`.`CountryCode`) order by `ci`.`Population` desc limit 5"
            }
          }
        ]
      }
    },
    {
      "join_optimization": {
        "select#": 1,
        "steps": [
          {
            "join_optimization": {
              "select#": 2,
              "steps": [
                {
                  "condition_processing": {
                    "condition": "WHERE",
                    "original_condition": "(`country`.`Continent` = 'Europe')",
                    "steps": [
                      {
                        "transformation": "equality_propagation",
                        "resulting_condition": "multiple equal('Europe', `country`.`Continent`)"
                      },
                      {
                        "transformation": "constant_propagation",
                        "resulting_condition": "multiple equal('Europe', `country`.`Continent`)"
                      },
                      {
                        "transformation": "trivial_condition_removal",
                        "resulting_condition": "multiple equal('Europe', `country`.`Continent`)"
                      }
                    ]
                  }
                },
                {
                  "substitute_generated_columns": {
                  }
                },
                {
                  "table_dependencies": [
                    {
                      "table": "`country`",
                      "row_may_be_null": false,
                      "map_bit": 0,
                      "depends_on_map_bits": [
                      ]
                    }
                  ]
                },
                {
                  "ref_optimizer_key_uses": [
                  ]
                },
                {
                  "rows_estimation": [
                    {
                      "table": "`country`",
                      "table_scan": {
                        "rows": 239,
                        "cost": 1.5
                      }
                    }
                  ]
                },
                {
                  "considered_execution_plans": [
                    {
                      "plan_prefix": [
                      ],
                      "table": "`country`",
                      "best_access_path": {
                        "considered_access_paths": [
                          {
                            "rows_to_scan": 239,
                            "filtering_effect": [
                            ],
                            "final_filtering_effect": 0.1429,
                            "access_type": "scan",
                            "resulting_rows": 34.143,
                            "cost": 25.4,
                            "chosen": true
                          }
                        ]
                      },
                      "condition_filtering_pct": 100,
                      "rows_for_plan": 34.143,
                      "cost_for_plan": 25.4,
                      "chosen": true
                    }
                  ]
                },
                {
                  "attaching_conditions_to_tables": {
                    "original_condition": "(`country`.`Continent` = 'Europe')",
                    "attached_conditions_computation": [
                    ],
                    "attached_conditions_summary": [
                      {
                        "table": "`country`",
                        "attached": "(`country`.`Continent` = 'Europe')"
                      }
                    ]
                  }
                },
                {
                  "optimizing_distinct_group_by_order_by": {
                    "simplifying_order_by": {
                      "original_clause": "`country`.`SurfaceArea`",
                      "items": [
                        {
                          "item": "`country`.`SurfaceArea`"
                        }
                      ],
                      "resulting_clause_is_simple": true,
                      "resulting_clause": "`country`.`SurfaceArea`"
                    }
                  }
                },
                {
                  "finalizing_table_conditions": [
                    {
                      "table": "`country`",
                      "original_table_condition": "(`country`.`Continent` = 'Europe')",
                      "final_table_condition   ": "(`country`.`Continent` = 'Europe')"
                    }
                  ]
                },
                {
                  "refine_plan": [
                    {
                      "table": "`country`"
                    }
                  ]
                },
                {
                  "considering_tmp_tables": [
                    {
                      "adding_sort_to_table_in_plan_at_position": 0
                    }
                  ]
                }
              ]
            }
          },
          {
            "condition_processing": {
              "condition": "WHERE",
              "original_condition": "(`co`.`Code` = `ci`.`CountryCode`)",
              "steps": [
                {
                  "transformation": "equality_propagation",
                  "resulting_condition": "multiple equal(`co`.`Code`, `ci`.`CountryCode`)"
                },
                {
                  "transformation": "constant_propagation",
                  "resulting_condition": "multiple equal(`co`.`Code`, `ci`.`CountryCode`)"
                },
                {
                  "transformation": "trivial_condition_removal",
                  "resulting_condition": "multiple equal(`co`.`Code`, `ci`.`CountryCode`)"
                }
              ]
            }
          },
          {
            "substitute_generated_columns": {
            }
          },
          {
            "table_dependencies": [
              {
                "table": "`city` `ci`",
                "row_may_be_null": false,
                "map_bit": 0,
                "depends_on_map_bits": [
                ]
              },
              {
                "table": " `co`",
                "row_may_be_null": false,
                "map_bit": 1,
                "depends_on_map_bits": [
                ]
              }
            ]
          },
          {
            "ref_optimizer_key_uses": [
              {
                "table": "`city` `ci`",
                "field": "CountryCode",
                "equals": "`co`.`Code`",
                "null_rejecting": false
              },
              {
                "table": " `co`",
                "field": "Code",
                "equals": "`ci`.`CountryCode`",
                "null_rejecting": false
              },
              {
                "table": " `co`",
                "field": "Code",
                "equals": "`ci`.`CountryCode`",
                "null_rejecting": false
              }
            ]
          },
          {
            "rows_estimation": [
              {
                "table": "`city` `ci`",
                "table_scan": {
                  "rows": 4188,
                  "cost": 6.25
                }
              },
              {
                "table": " `co`",
                "table_scan": {
                  "rows": 10,
                  "cost": 2.625
                }
              }
            ]
          },
          {
            "considered_execution_plans": [
              {
                "plan_prefix": [
                ],
                "table": " `co`",
                "best_access_path": {
                  "considered_access_paths": [
                    {
                      "access_type": "ref",
                      "index": "<auto_key0>",
                      "usable": false,
                      "chosen": false
                    },
                    {
                      "access_type": "ref",
                      "index": "<auto_key1>",
                      "usable": false,
                      "chosen": false
                    },
                    {
                      "rows_to_scan": 10,
                      "filtering_effect": [
                      ],
                      "final_filtering_effect": 1,
                      "access_type": "scan",
                      "resulting_rows": 10,
                      "cost": 3.625,
                      "chosen": true
                    }
                  ]
                },
                "condition_filtering_pct": 100,
                "rows_for_plan": 10,
                "cost_for_plan": 3.625,
                "rest_of_plan": [
                  {
                    "plan_prefix": [
                      " `co`"
                    ],
                    "table": "`city` `ci`",
                    "best_access_path": {
                      "considered_access_paths": [
                        {
                          "access_type": "ref",
                          "index": "CountryCode",
                          "rows": 18.052,
                          "cost": 63.181,
                          "chosen": true
                        },
                        {
                          "rows_to_scan": 4188,
                          "filtering_effect": [
                          ],
                          "final_filtering_effect": 1,
                          "access_type": "scan",
                          "using_join_cache": true,
                          "buffers_needed": 1,
                          "resulting_rows": 4188,
                          "cost": 4194.3,
                          "chosen": false
                        }
                      ]
                    },
                    "condition_filtering_pct": 100,
                    "rows_for_plan": 180.52,
                    "cost_for_plan": 66.806,
                    "sort_cost": 180.52,
                    "new_cost_for_plan": 247.32,
                    "chosen": true
                  }
                ]
              },
              {
                "plan_prefix": [
                ],
                "table": "`city` `ci`",
                "best_access_path": {
                  "considered_access_paths": [
                    {
                      "access_type": "ref",
                      "index": "CountryCode",
                      "usable": false,
                      "chosen": false
                    },
                    {
                      "rows_to_scan": 4188,
                      "filtering_effect": [
                      ],
                      "final_filtering_effect": 1,
                      "access_type": "scan",
                      "resulting_rows": 4188,
                      "cost": 425.05,
                      "chosen": true
                    }
                  ]
                },
                "condition_filtering_pct": 100,
                "rows_for_plan": 4188,
                "cost_for_plan": 425.05,
                "pruned_by_cost": true
              }
            ]
          },
          {
            "attaching_conditions_to_tables": {
              "original_condition": "(`ci`.`CountryCode` = `co`.`Code`)",
              "attached_conditions_computation": [
              ],
              "attached_conditions_summary": [
                {
                  "table": " `co`",
                  "attached": null
                },
                {
                  "table": "`city` `ci`",
                  "attached": "(`ci`.`CountryCode` = `co`.`Code`)"
                }
              ]
            }
          },
          {
            "optimizing_distinct_group_by_order_by": {
              "simplifying_order_by": {
                "original_clause": "`ci`.`Population` desc",
                "items": [
                  {
                    "item": "`ci`.`Population`"
                  }
                ],
                "resulting_clause_is_simple": false,
                "resulting_clause": "`ci`.`Population` desc"
              }
            }
          },
          {
            "finalizing_table_conditions": [
              {
                "table": "`city` `ci`",
                "original_table_condition": "(`ci`.`CountryCode` = `co`.`Code`)",
                "final_table_condition   ": null
              }
            ]
          },
          {
            "refine_plan": [
              {
                "table": " `co`"
              },
              {
                "table": "`city` `ci`"
              }
            ]
          },
          {
            "considering_tmp_tables": [
              {
                "adding_tmp_table_in_plan_at_position": 2,
                "write_method": "write_all_rows"
              },
              {
                "adding_sort_to_table_in_plan_at_position": 2
              }
            ]
          }
        ]
      }
    },
    {
      "join_explain": {
        "select#": 1,
        "steps": [
          {
            "creating_tmp_table": {
              "tmp_table_info": {
                "table": " `co`",
                "in_plan_at_position": 0,
                "columns": 2,
                "row_length": 56,
                "key_length": 0,
                "unique_constraint": false,
                "makes_grouped_rows": false,
                "cannot_insert_duplicates": false,
                "location": "TempTable"
              }
            }
          },
          {
            "join_explain": {
              "select#": 2,
              "steps": [
              ]
            }
          }
        ]
      }
    }
  ]
}
MISSING_BYTES_BEYOND_MAX_MEM_SIZE: 0
          INSUFFICIENT_PRIVILEGES: 0
1 row in set (0.0436 sec)